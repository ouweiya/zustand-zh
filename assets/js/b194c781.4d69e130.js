"use strict";(self.webpackChunkzustand_zh=self.webpackChunkzustand_zh||[]).push([[880],{2916:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=s(4848),a=s(8453);const r={title:"Immutable state and merging",nav:4},i=void 0,c={id:"guides/immutable-state-and-merging",title:"Immutable state and merging",description:"Like with React's useState, we need to update state immutably.",source:"@site/docs/guides/immutable-state-and-merging.md",sourceDirName:"guides",slug:"/guides/immutable-state-and-merging",permalink:"/zustand-zh/docs/guides/immutable-state-and-merging",draft:!1,unlisted:!1,editUrl:"https://github.com/ouweiya/zustand-zh/docs/guides/immutable-state-and-merging.md",tags:[],version:"current",frontMatter:{title:"Immutable state and merging",nav:4},sidebar:"tutorialSidebar",previous:{title:"How to reset state",permalink:"/zustand-zh/docs/guides/how-to-reset-state"},next:{title:"Initialize state with props",permalink:"/zustand-zh/docs/guides/initialize-state-with-props"}},o={},d=[{value:"Nested objects",id:"nested-objects",level:2},{value:"Replace flag",id:"replace-flag",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Like with React's ",(0,n.jsx)(t.code,{children:"useState"}),", we need to update state immutably."]}),"\n",(0,n.jsx)(t.p,{children:"Here's a typical example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:"import { create } from 'zustand'\r\n\r\nconst useCountStore = create((set) => ({\r\n  count: 0,\r\n  inc: () => set((state) => ({ count: state.count + 1 })),\r\n}))\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"set"})," function is to update state in the store.\r\nBecause the state is immutable, it should have been like this:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"set((state) => ({ ...state, count: state.count + 1 }))\n"})}),"\n",(0,n.jsxs)(t.p,{children:["However, as this is a common pattern, ",(0,n.jsx)(t.code,{children:"set"})," actually merges state, and\r\nwe can skip the ",(0,n.jsx)(t.code,{children:"...state"})," part:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"set((state) => ({ count: state.count + 1 }))\n"})}),"\n",(0,n.jsx)(t.h2,{id:"nested-objects",children:"Nested objects"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"set"})," function merges state at only one level.\r\nIf you have a nested object, you need to merge them explicitly. You will use the spread operator pattern like so:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-jsx",children:"import { create } from 'zustand'\r\n\r\nconst useCountStore = create((set) => ({\r\n  nested: { count: 0 },\r\n  inc: () =>\r\n    set((state) => ({\r\n      nested: { ...state.nested, count: state.nested.count + 1 },\r\n    })),\r\n}))\n"})}),"\n",(0,n.jsxs)(t.p,{children:["For complex use cases, consider using some libraries that help with immutable updates.\r\nYou can refer to ",(0,n.jsx)(t.a,{href:"/zustand-zh/docs/guides/updating-state#deeply-nested-object",children:"Updating nested state object values"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"replace-flag",children:"Replace flag"}),"\n",(0,n.jsxs)(t.p,{children:["To disable the merging behavior, you can specify a ",(0,n.jsx)(t.code,{children:"replace"})," boolean value for ",(0,n.jsx)(t.code,{children:"set"})," like so:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"set((state) => newState, true)\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>c});var n=s(6540);const a={},r=n.createContext(a);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);