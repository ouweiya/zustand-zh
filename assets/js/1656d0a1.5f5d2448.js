"use strict";(self.webpackChunkzustand_zh=self.webpackChunkzustand_zh||[]).push([[217],{3951:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=n(4848),a=n(8453);const r={title:"Calling actions outside a React event handler in pre React 18",nav:10},i=void 0,o={id:"guides/event-handler-in-pre-react-18",title:"Calling actions outside a React event handler in pre React 18",description:"Because React handles setState synchronously if it's called outside an event handler, updating the state outside an event handler will force react to update the components synchronously. Therefore, there is a risk of encountering the zombie-child effect.",source:"@site/docs/guides/event-handler-in-pre-react-18.md",sourceDirName:"guides",slug:"/guides/event-handler-in-pre-react-18",permalink:"/zustand-zh/docs/guides/event-handler-in-pre-react-18",draft:!1,unlisted:!1,editUrl:"https://github.com/ouweiya/zustand-zh/blob/master/docs/guides/event-handler-in-pre-react-18.md",tags:[],version:"current",frontMatter:{title:"Calling actions outside a React event handler in pre React 18",nav:10},sidebar:"tutorialSidebar",previous:{title:"Testing",permalink:"/zustand-zh/docs/guides/testing"},next:{title:"Map and Set Usage",permalink:"/zustand-zh/docs/guides/maps-and-sets-usage"}},c={},d=[];function u(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Because React handles ",(0,s.jsx)(t.code,{children:"setState"})," synchronously if it's called outside an event handler, updating the state outside an event handler will force react to update the components synchronously. Therefore, there is a risk of encountering the zombie-child effect.\r\nIn order to fix this, the action needs to be wrapped in ",(0,s.jsx)(t.code,{children:"unstable_batchedUpdates"})," like so:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:"import { unstable_batchedUpdates } from 'react-dom' // or 'react-native'\r\n\r\nconst useFishStore = create((set) => ({\r\n  fishes: 0,\r\n  increaseFishes: () => set((prev) => ({ fishes: prev.fishes + 1 })),\r\n}))\r\n\r\nconst nonReactCallback = () => {\r\n  unstable_batchedUpdates(() => {\r\n    useFishStore.getState().increaseFishes()\r\n  })\r\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["More details: ",(0,s.jsx)(t.a,{href:"https://github.com/pmndrs/zustand/issues/302",children:"https://github.com/pmndrs/zustand/issues/302"})]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(6540);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);