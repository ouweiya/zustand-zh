"use strict";(self.webpackChunkzustand_zh=self.webpackChunkzustand_zh||[]).push([[95],{3570:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(4848),s=n(8453);const a={title:"How to reset state",nav:13},o=void 0,i={id:"guides/how-to-reset-state",title:"How to reset state",description:"The following pattern can be used to reset the state to its initial value.",source:"@site/docs/guides/how-to-reset-state.md",sourceDirName:"guides",slug:"/guides/how-to-reset-state",permalink:"/zustand-zh/docs/guides/how-to-reset-state",draft:!1,unlisted:!1,editUrl:"https://github.com/ouweiya/zustand-zh/blob/master/docs/guides/how-to-reset-state.md",tags:[],version:"current",frontMatter:{title:"How to reset state",nav:13},sidebar:"tutorialSidebar",previous:{title:"Connect to state with URL",permalink:"/zustand-zh/docs/guides/connect-to-state-with-url-hash"},next:{title:"Initialize state with props",permalink:"/zustand-zh/docs/guides/initialize-state-with-props"}},d={},c=[{value:"CodeSandbox Demo",id:"codesandbox-demo",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"The following pattern can be used to reset the state to its initial value."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { create } from 'zustand'\r\n\r\n// define types for state values and actions separately\r\ntype State = {\r\n  salmon: number\r\n  tuna: number\r\n}\r\n\r\ntype Actions = {\r\n  addSalmon: (qty: number) => void\r\n  addTuna: (qty: number) => void\r\n  reset: () => void\r\n}\r\n\r\n// define the initial state\r\nconst initialState: State = {\r\n  salmon: 0,\r\n  tuna: 0,\r\n}\r\n\r\n// create store\r\nconst useSlice = create<State & Actions>()((set, get) => ({\r\n  ...initialState,\r\n  addSalmon: (qty: number) => {\r\n    set({ salmon: get().salmon + qty })\r\n  },\r\n  addTuna: (qty: number) => {\r\n    set({ tuna: get().tuna + qty })\r\n  },\r\n  reset: () => {\r\n    set(initialState)\r\n  },\r\n}))\n"})}),"\n",(0,r.jsx)(t.p,{children:"Resetting multiple stores at once"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { create as _create } from 'zustand'\r\nimport type { StateCreator } from 'zustand'\r\n\r\nconst storeResetFns = new Set<() => void>()\r\n\r\nconst resetAllStores = () => {\r\n  storeResetFns.forEach((resetFn) => {\r\n    resetFn()\r\n  })\r\n}\r\n\r\nexport const create = (<T extends unknown>() => {\r\n  return (stateCreator: StateCreator<T>) => {\r\n    const store = _create(stateCreator)\r\n    const initialState = store.getState()\r\n    storeResetFns.add(() => {\r\n      store.setState(initialState, true)\r\n    })\r\n    return store\r\n  }\r\n}) as typeof _create\n"})}),"\n",(0,r.jsx)(t.p,{children:"Resetting bound store using Slices pattern"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import create from 'zustand'\r\nimport type { StateCreator } from 'zustand'\r\n\r\nconst sliceResetFns = new Set<() => void>()\r\n\r\nexport const resetAllSlices = () => {\r\n  sliceResetFns.forEach((resetFn) => {\r\n    resetFn()\r\n  })\r\n}\r\n\r\nconst initialBearState = { bears: 0 }\r\n\r\ninterface BearSlice {\r\n  bears: number\r\n  addBear: () => void\r\n  eatFish: () => void\r\n}\r\n\r\nconst createBearSlice: StateCreator<\r\n  BearSlice & FishSlice,\r\n  [],\r\n  [],\r\n  BearSlice\r\n> = (set) => {\r\n  sliceResetFns.add(() => set(initialBearState))\r\n  return {\r\n    ...initialBearState,\r\n    addBear: () => set((state) => ({ bears: state.bears + 1 })),\r\n    eatFish: () => set((state) => ({ fishes: state.fishes - 1 })),\r\n  }\r\n}\r\n\r\nconst initialStateFish = { fishes: 0 }\r\n\r\ninterface FishSlice {\r\n  fishes: number\r\n  addFish: () => void\r\n}\r\n\r\nconst createFishSlice: StateCreator<\r\n  BearSlice & FishSlice,\r\n  [],\r\n  [],\r\n  FishSlice\r\n> = (set) => {\r\n  sliceResetFns.add(() => set(initialStateFish))\r\n  return {\r\n    ...initialStateFish,\r\n    addFish: () => set((state) => ({ fishes: state.fishes + 1 })),\r\n  }\r\n}\r\n\r\nconst useBoundStore = create<BearSlice & FishSlice>()((...a) => ({\r\n  ...createBearSlice(...a),\r\n  ...createFishSlice(...a),\r\n}))\r\n\r\nexport default useBoundStore\n"})}),"\n",(0,r.jsx)(t.h2,{id:"codesandbox-demo",children:"CodeSandbox Demo"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Basic: ",(0,r.jsx)(t.a,{href:"https://codesandbox.io/s/zustand-how-to-reset-state-basic-demo-rrqyon",children:"https://codesandbox.io/s/zustand-how-to-reset-state-basic-demo-rrqyon"})]}),"\n",(0,r.jsxs)(t.li,{children:["Advanced: ",(0,r.jsx)(t.a,{href:"https://codesandbox.io/s/zustand-how-to-reset-state-advanced-demo-gtu0qe",children:"https://codesandbox.io/s/zustand-how-to-reset-state-advanced-demo-gtu0qe"})]}),"\n",(0,r.jsxs)(t.li,{children:["Immer: ",(0,r.jsx)(t.a,{href:"https://codesandbox.io/s/how-to-reset-state-advance-immer-demo-nyet3f",children:"https://codesandbox.io/s/how-to-reset-state-advance-immer-demo-nyet3f"})]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var r=n(6540);const s={},a=r.createContext(s);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);